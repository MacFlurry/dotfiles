#------------------------------------------------------------------------------
#                                    muttrc
#------------------------------------------------------------------------------

reset all # system defaults
unmy_hdr *
unhook *
unscore *
unlists *
unsubscribe *
unalias *

#------------------------------------------------------------------------------
#                                   account
#------------------------------------------------------------------------------

# Incoming: local folder synced via offlineimap
set mbox_type = Maildir
set folder    = ~/.mail
set spoolfile = =INBOX
set postponed = =drafts

# Generated by offlineimap.
source `FILE=$HOME/.mutt/mailboxes; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`

# Outgoing: Gmail's SMTP
set smtp_authenticators='gssapi:login'
set smtp_url="smtps://matthias@vallentin.net@smtp.gmail.com:465/"
set smtp_pass=`security find-generic-password -s mutt -w`
unset record # Gmail's SMTP server already saves a copy

#------------------------------------------------------------------------------
#                                  personal
#------------------------------------------------------------------------------

set realname="Matthias Vallentin"
set signature=~/.mutt/signature
set from=vallentin@icir.org
alternates '(matthias@vallentin.net|vallentin?@(icsi.berkeley.edu|icir.org)|matthias.vallentin@gmail.com|(vallentin|mavam|mpm)@berkeley.edu|(mavam|vallentin|matthias.vallentin)@(ee)?cs.berkeley.edu|matt?(hias)?@bro.org|matthias@broala.com)'

set pgp_sign_as="0x9C8D4B41"
my_hdr X-PGP-Fingerprint: 8A3B 1323 B469 CCBA 54D3  3BCC D5E7 8DF5 9C8D 4B41

#------------------------------------------------------------------------------
#                                   general
#------------------------------------------------------------------------------

#set header_cache     = ~/.mutt/cache/headers
#set message_cachedir = ~/.mutt/cache/messages
set certificate_file = ~/.mutt/cache/certificates
set mailcap_path     = ~/.mutt/mailcap
set tmpdir           = ~/.mutt/tmp

unset abort_nosubject   # abort composing when no subject is given
unset abort_unmodified  # abort composition if no changes were body made
set auto_tag            # apply functions to all tagged messages
unset collapse_unread   # don't collapse threads containing unread messages
unset confirmappend     # prompt when appending messages to a mailbox
set delete=yes          # really delete messages when syncing a mailbox
set edit_headers        # allow editing headers of outgoing messages
set envelope_from=yes   # use From: header to derive envelope's sender
set fast_reply          # skip prompt for recipients and subject
set history=200         # [10] size of the string history buffer
set include=yes         # always include messages when replying
unset mark_old          # Do not distinguish between old and new unread mails
set move=no             # do not move read messages from spool to $mbox
set net_inc=5           # [10] large transfers update their progress every 'x'
set pipe_split          # pipe messages one by one
set print=ask-yes       # confirm printing
set print_split=yes     # execute print command once for each message printed
unset prompt_after      # prompt for command when pager exits
set quit=ask-yes        # confirm exit
set recall=no           # don't ask to recall postponed mails
set reverse_alias=yes   # display real name instead of email
set reverse_name=yes
set reverse_realname=no
unset sig_dashes        # insert '-- ' before the 'signature'
set ssl_force_tls=yes   # Always use TLS when connecting to a server.
set ssl_starttls=yes    # Active TLS if available.
set thorough_search     # decode headers and attachments before searching
set timeout=10          # [300]
set uncollapse_jump     # Jump to unread message when uncollapse
unset wait_key          # Ask to press a key after shell-escape, pipes, etc.

# muttprint may need: perl -MCPAN -e 'install Text::Iconv'
set print_command="~/.mutt/scripts/muttprint -1 -C 'ps2pdf - - | open -a preview -f'"
set query_command="lbdbq %s"

#------------------------------------------------------------------------------
#                                   sorting
#------------------------------------------------------------------------------

set sort=threads
set sort_alias=alias
set sort_aux=reverse-last-date-received
set sort_browser=alpha
set sort_re=yes

#------------------------------------------------------------------------------
#                                   formats
#------------------------------------------------------------------------------

set alias_format="%4n %2f %t %-10a   %r"
set attach_format=" %u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "
set attribution="On %d, %n wrote:"
set compose_format="-- compose  [ approx. msg size: %l   attachments: %a ]%>-"
set date_format="!%a, %b %d, %Y at %I:%M:%S%p %Z"
set editor="vim +\`awk ' /^$/ {print i+2; exit} {i++}' %s\` +':set textwidth=72' %s"
set folder_format="%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"
set forward_format="Fwd: %s"
set indent_string="> "
set index_format="%4C %Z %{!%b %d} %?M?#%4M&%5c? %-25.25F %s%?Y? <%Y>?"
set mask="!^\\.[^.]"
set message_format="%s"
set pager_format="-%Z- %C/%m: %-20.20n   %s"
set quote_regexp="^([ \t]*[|>:}#])+"
set reply_regexp="^(re([\[0-9\]+])*|aw):[ \t]*"
set simple_search="~f %s | ~s %s"
set smileys="(>From )|(:[-^]?[][)(><}{|/DP])"
set status_chars="-*%A"
set status_format="%_h:  [%r]  %f [total:%?M?%M/?%m%?n? new:%n?%?o? old:%o?%?d? del:%d?%?F? flag:%F?%?t? tag:%t?%?p? post:%p?%?b? inc:%b?%?l? %l?]       (%s/%S)%> [%P]   "

#------------------------------------------------------------------------------
#                                     UI
#------------------------------------------------------------------------------

# show version at startup
push V

# Always collapse threads when entering a folder.
folder-hook '.' 'push <collapse-all>'

unset help
#set display_filter=~/.mutt/scripts/message-format.pl
set pager_index_lines=8
set pager_stop          # don't move to next message at end w/ next-page
set narrow_tree
set wrapmargin=1        # [0] margin remaining at the right side of terminal
set to_chars=" +TCFL"

ignore *
unignore From: Sender:
unignore To: Cc: Bcc: Reply-To:
unignore Subject:
unignore Date:
unignore User-Agent: X-Mailer:
unignore X-Label:

hdr_order Sender: From: \
    To: Cc: Bcc: Reply-To: \
    Subject: \
    Date: \
    User-Agent: X-Mailer: \
    X-Label:

color indicator  cyan         blue  # arrow or bar indicating current item
color status     black        cyan
color tree       red          black # thread tree drawn
color bold       white        black
color error      brightred    black
color markers    cyan         black # the ``+'' markers at wrapped lines
color message    brightyellow black # informational messages
color tilde      brightblue   black
color attachment red          black
color search     white        brightblue
color signature  blue         black
color underline  brightgreen  black

color quoted     cyan        black
color quoted1    yellow      black
color quoted2    red         black
color quoted3    brightred   black
color quoted4    yellow      black
color quoted5    cyan        black
color quoted6    green       black
color quoted7    brightcyan  black
color quoted8    brightgreen black

color index      brightblack black   ~l # mailing lists
color index      yellow      black   ~p # mail to myself
#color index      black       black   ~P # mail from myself
color index      green       black   ~g # PGP signed
color index      green       black   ~k # GPG
color index      brightgreen black   ~G # PGP encrypted
color index      brightwhite black   ~O # old
color index      cyan        black   ~Q # replied mails
color index      magenta     black   "~v~(!~N)~(!~F)" # collapsed thread (w/o flagged)
color index      red         black   "~v~(!~N)~(~F)"  # collapsed thread (w/ flagged)
color index      brightwhite black   ~N # new
color index      brightblue  black   ~D # deleted
color index      blue        black   ~= # duplicates
color index      red         black   ~F # flagged
color index      black       cyan    ~T # tagged

color hdrdefault brightblack black
color header    red          black "(From|Reply-To):"
color header    yellow       black "^(To|Cc|Bcc):"
color header    brightblack  black "Date:"
color header    red          black "Subject:"
color header    brightblack  black "(User-Agent|X-Mailer):"

# Protocols
color body  magenta     black "(finger|ftp|http|https|telnet)://[^ >]+"
color body  magenta     black "news:[^ \">\t\r\n]*"
# *Bold* text
color body brightwhite black "(^|[[:space:]])\\*[^[:space:]]+\\*([[:space:]]|$)"
# _Underlined_ text
color body  brightwhite black "(^|[[:space:]])_[^[:space:]]+_([[:space:]]|$)"
# /Italic/ text
color body  brightwhite black "(^|[[:space:]])/[^[:space:]]+/([[:space:]]|$)"
# Smileys
color body  yellow      black ' [;:=][-^]?[pxo)]'
 # Emails
color body	brightred   black '[-.+_a-z0-9]+@[-.a-z0-9]+\.[a-z]+'
# Phone Numbers
color body  green       black '(\+?[0-9]{1,2}[-.])?[0-9]{3}[-.][a-z0-9]{3}[-.][-0-9]+\\W+'
color body  green       black '((\+|00)[0-9]{1,2}) ?(\(0\))?[0-9]{1,4}[\/ ][-0-9]+\\W+'
# IPs and subnets
color body  green       black '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}(\/([1-9]|[12][0-9]|3[012])[^[:digit:]])?'
# Time
color body  red         black  '([0-9]{1,2}(:[0-9]{1,2})? ?- ?)?([0-9]{1,2}:)?[0-9]{1,2}(:[0-9]{1,2})? ?[ap]m\\W+'
# GPG / PGP
color body  yellow       black "^gpg:.*"
color body  brightyellow black "^gpg: WARNING.*"
color body  green        black "^gpg: Good signature from.*"
color body  green        black "^Verification successful"
color body  white        red   "^gpg: Bad signature from.*"

# mono terminal "colors"
mono  normal     none
mono  attachment bold
mono  bold       bold
mono  error      standout
mono  indicator  reverse
mono  markers    bold
mono  message    bold
mono  status     underline
mono  tree       none

#------------------------------------------------------------------------------
#                               crypto settings
#------------------------------------------------------------------------------

set crypt_replysign=no           # automatically sign replies to signed msgs
set crypt_replysignencrypted=yes # automatically sign replies to encrypted msgs
set pgp_timeout=0
set pgp_use_gpg_agent=yes

# [pgp_entry_format] PGP key selection menu
# %n    number
# %k    key id
# %u    user id
# %a    algorithm
# %l    key length
# %f    flags
# %c    capabilities
# %t    trust/validity of the key-uid association
# %[<s>]    date of the key where <s> is an strftime(3) expression
set pgp_entry_format="%4n %t%f %4l/0x%k %-4a %2c %u"

set pgp_good_sign="^gpg: Good signature from"

# %p      Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
#         string otherwise. Note: This may be used with a %? construct.
# %f      Expands to the name of a file containing a message.
# %s      Expands to the name of a file containing the signature part
#                    of a multipart/signed attachment when verifying it.
# %a      The value of $pgp_sign_as.
# %r      One or more key IDs.

#set pgp_getkeys_command
set pgp_getkeys_command="gpg --recv-keys %r 2> /dev/null"

# decode application/pgp
set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="gpg --no-verbose --batch --output - %f"

# create a application/pgp signed (old-style) message
set pgp_clearsign_command="gpg --no-verbose --batch --output - --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime signed attachment
set pgp_sign_command="gpg --no-verbose --batch --output - --armor --detach-sign --textmode %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
set pgp_encrypt_only_command="pgpewrap gpg -v --batch --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
set pgp_encrypt_sign_command="pgpewrap gpg -v --batch --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set pgp_import_command="gpg --no-verbose --import -v %f"

# export a key from the public key ring
set pgp_export_command="gpg --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r"=20

# read in the secret key ring
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r"=20

#------------------------------------------------------------------------------
#                                  remainder
#------------------------------------------------------------------------------

source ~/.mutt/autoview
source ~/.mutt/keys

# Aliases
set alias_file = `FILE=$HOME/.mutt/aliases; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`
source $alias_file

# Hooks
source `FILE=$HOME/.mutt/hooks; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`

# Lists
source `FILE=$HOME/.mutt/lists; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`

# Patch-specific configuration
source `FILE=$HOME/.mutt/sidebar; if [ ! $(mutt -v | grep sidebar) ]; then FILE=/dev/null;fi;echo "$FILE"`
source `FILE=$HOME/.mutt/xlabel;  if [ ! $(mutt -v | grep xlabel) ]; then FILE=/dev/null;fi;echo "$FILE"`

# vim: ft=muttrc
