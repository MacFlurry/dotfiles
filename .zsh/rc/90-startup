##
## Startup
##

# List tmux sessions.
if which tmux &> /dev/null; then
    local tmux_sessions="$(tmux list-sessions 2> /dev/null)"
    if (( $#tmux_sessions )) ; then
        print "$fg[magenta]tmux"
        for s (${(f)tmux_sessions}) { printf "$fg[green] * $reset_color %s\n" $s }
    fi
fi

# Setup SSH and GPG agents
function setup_agents
{
    ! which keychain &> /dev/null && return

    local -a agents;

    # Locate SSH public keys.
    set -- ~/.ssh/**/*pub(N)
    if (( $# )); then
        local -a ssh_keys
        ssh_keys=(~/.ssh/**/*pub(:r))
        agents+="ssh"
    fi

    # Locate GPG private keys.
    local gpg_keys=${${${(M)${(f)"$(gpg --list-secret-keys \
        --list-options no-show-photos 2>/dev/null)"}:%sec*}#sec */}%% *}
    if (( $#gpg_keys )); then
        agents+="gpg"
    fi

    ! (( $#agents )) && return

    if [[ -n "$ssh_keys" ]] ; then
        print "$fg[magenta]SSH keys"
        for k ($ssh_keys) { printf "$fg[green] * $reset_color %s\n" $k }
    fi

    if [[ -n "$gpg_keys" ]] ; then
        print "$fg[magenta]GPG keys"
        for k ($gpg_keys) { printf "$fg[green] * $reset_color %s\n" $k }
    fi

    eval $(keychain -q --nogui --eval --host fix --agents ${(j:,:)agents} \
        $ssh_keys $gpg_keys)
}

# Automatically setup existing agents.
if [[ ${#$(findpids gpg-agent)} > 0 || ${#$(findpids ssh-agent)} > 0 ]]; then
    setup_agents
fi

# vim: ft=zsh
