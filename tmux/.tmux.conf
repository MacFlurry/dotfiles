# unbing-key or unbind (it shortcut) will unbind key
# -T specifies which "key table" we're using.
unbind -a -T prefix
unbind -a -T root
unbind -a -T copy-mode
unbind -a -T copy-mode-vi
#

# ========
# General
# ========
# set the prefix -> leader key :  which means "alt-w" or "option-w"
# set-option or set (it shortcut) does what it says
# -g makes the change "globaly"

set -g prefix M-w


set -g mouse on
set -g escape-time 1

set -g allow-rename off
set -g base-index 1
set -g buffer-limit 10
set -g visual-activity on
set -g visual-bell on

set -g mode-keys vi

# Renumber windows after closing any window.
set -g renumber-windows on

# Use a more helpful scroll history size.
set -g history-limit 10000

# Use the xterm-256color terminal
set -g default-terminal "xterm-256color"

# Apply Tc
set -ga terminal-overrides ",xterm-256color:Tc"

# SSH compatibility: remove SSH_AUTH_SOCK to disable tmux automatically
# resetting the variable.
set -g update-environment -r
setenv -g SSH_AUTH_SOCK $HOME/.gnupg/S.gpg-agent.ssh

# Status line; look for tmuxline in ~/.vimrc.
setenv -g TMUX_PROFILE $ITERM_PROFILE
is_light='[ "$TMUX_PROFILE" = "light" ]'
tmuxline_dark="~/.tmux/tmuxline-dark.conf"
tmuxline_light="~/.tmux/tmuxline-light.conf"
if-shell "$is_light" "source $tmuxline_light" "source $tmuxline_dark"


# =============
# Key bindings
# =============

# Configuration
bind n command-prompt 'rename-window %%'
bind N command-prompt 'rename-session %%'

# Window management
bind . last-window
bind -r ] next-window
bind -r [ previous-window
bind -r < swap-window -t :-
bind -r > swap-window -t :+
bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4
bind -n F5 select-window -t 5
bind -n F6 select-window -t 6
bind -n F7 select-window -t 7
bind -n F8 select-window -t 8
bind -n F9 select-window -t 9
bind -n F10 select-window -t 10

# Pane management
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind -r '{' swap-pane -U
bind -r '}' swap-pane -D
bind -r ( rotate-window -U
bind -r ) rotate-window -D
bind -r Left resize-pane -L 1
bind -r Down resize-pane -D 1
bind -r Up resize-pane -U 1
bind -r Right resize-pane -R 1
bind -r S-Left resize-pane -L 2
bind -r S-Down resize-pane -D 2
bind -r S-Up resize-pane -U 2
bind -r S-Right resize-pane -R 2
bind -r M-Left resize-pane -L 5
bind -r M-Down resize-pane -D 5
bind -r M-Up resize-pane -U 5
bind -r M-Right resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
          | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Work around CTRL+L for clearing the screen.
bind C-l send-keys 'C-l'



# copy mode
# short for bind -T prefix Space copy-mode. That means to enter copy mode, we have to press M-w Space
bind Space copy-mode
# press escape and leave copy mode
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi Up     send -X cursor-up
bind -T copy-mode-vi Down   send -X cursor-down
bind -T copy-mode-vi Left   send -X cursor-left
bind -T copy-mode-vi Right  send -X cursor-right

# bind -T copy-mode-vi Space  send -X begin-selection
# clear the current selection if there is one, and start a new selection if there isn’t
bind -T copy-mode-vi Space  if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }
# bind -T copy-mode-vi y      send -X copy-selection-no-clear
bind -T copy-mode-vi y      send -X copy-pipe 'pbcopy'
bind -T copy-mode-vi Enter  send -X copy-selection-and-cancel

# Copy & paste
bind Space copy-mode
bind o delete-buffer
bind p paste-buffer -d
bind P paste-buffer
bind b list-buffers
bind B choose-buffer



# who said scrolling ?
# The -n makes this a global keybinding, so we don’t need to use the prefix key before we scroll
bind -n WheelUpPane copy-mode -e
bind -T copy-mode-vi WheelUpPane   send -X -N 5 scroll-up
bind -T copy-mode-vi WheelDownPane send -X -N 5 scroll-down

# copy-mode -M means enter copy mode and start in a mouse selection
# -T copy-mode MouseDrag1Pane lets us change our selection
bind -n MouseDrag1Pane copy-mode -M
bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-no-clear


# Toggle tmuxline color based on terminal color profile.
bind = if-shell "$is_light"  \
                "source $tmuxline_dark; setenv -g TMUX_PROFILE dark"  \
                "source $tmuxline_light; setenv -g TMUX_PROFILE light"
# =======
# Plugins
# =======

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

set -g @sidebar-tree-command 'tree -C'
set -g @sidebar-tree-width '60'

# FIXME: tmux-copycat and tmux-yank have trouble with tmux 2.5. Uncomment once
# the issues resolve.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sidebar'

# Install TPM if not already installed.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run '~/.tmux/plugins/tpm/tpm'

bind M-r source-file ~/.tmux-conf
