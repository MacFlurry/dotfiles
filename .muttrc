#------------------------------------------------------------------------------
#                                    muttrc
#------------------------------------------------------------------------------

reset all # system defaults
unmy_hdr *
unhdr_order *
unhook *
unscore *
unlists *
unsubscribe *
unalias *
uncolor index *
uncolor header *
uncolor body *

#------------------------------------------------------------------------------
#                                   account
#------------------------------------------------------------------------------

# Incoming: local folder synced via offlineimap
set mbox_type = Maildir
set folder    = ~/.mail
set spoolfile = =INBOX
set postponed = =gmail/drafts

# Generated by offlineimap.
source `FILE=$HOME/.mutt/mailboxes; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`

# Outgoing: Gmail's SMTP
set smtp_authenticators='gssapi:login'
set smtp_url="smtps://matthias@vallentin.net@smtp.gmail.com:465/"
set smtp_pass=`security find-generic-password -s mutt -w`

#------------------------------------------------------------------------------
#                                  personal
#------------------------------------------------------------------------------

set realname="Matthias Vallentin"
set signature=~/.mutt/signature
set from=matthias@berkeley.edu
alternates '(matthias@vallentin.net|vallentin?@(icsi.berkeley.edu|icir.org)|mvallentin@lbl.gov|(matthias|vallentin|mavam|mpm)@berkeley.edu|(mavam|vallentin|matthias.vallentin)@(ee)?cs.berkeley.edu|matt?(hias)?@bro.org)'

set pgp_sign_as="0x9C8D4B41"
my_hdr X-PGP-Fingerprint: 8A3B 1323 B469 CCBA 54D3  3BCC D5E7 8DF5 9C8D 4B41

#------------------------------------------------------------------------------
#                                   general
#------------------------------------------------------------------------------

set certificate_file = `CDIR=$HOME/.mutt/cache; if [ ! -d "$CDIR" ]; then mkdir "$CDIR"; fi; echo "$CDIR/certificates"`
set mailcap_path     = ~/.mutt/mailcap

unset abort_nosubject   # abort composing when no subject is given
unset abort_unmodified  # abort composition if no changes were body made
set auto_tag            # apply functions to all tagged messages
unset collapse_unread   # don't collapse threads containing unread messages
unset confirmappend     # prompt when appending messages to a mailbox
set delete=yes          # really delete messages when syncing a mailbox
set edit_headers        # allow editing headers of outgoing messages
set envelope_from=yes   # use From: header to derive envelope's sender
set fast_reply          # skip prompt for recipients and subject
set history=200         # [10] size of the string history buffer
set include=yes         # always include messages when replying
set mail_check_stats    # periodically calculate message statistics of mboxes
unset mark_old          # Do not distinguish between old and new unread mails
set move=no             # do not move read messages from spool to $mbox
set net_inc=5           # [10] large transfers update their progress every 'x'
set pipe_split          # pipe messages one by one
set print=ask-yes       # confirm printing
set print_split=yes     # execute print command once for each message printed
unset prompt_after      # prompt for command when pager exits
set quit=ask-yes        # confirm exit
set recall=no           # don't ask to recall postponed mails
set reverse_alias=yes   # display real name instead of email
set reverse_name=yes
set reverse_realname=no
unset sig_dashes        # insert '-- ' before the 'signature'
set ssl_force_tls=yes   # Always use TLS when connecting to a server.
set ssl_starttls=yes    # Active TLS if available.
set thorough_search     # decode headers and attachments before searching
set timeout=10          # [300]
set uncollapse_jump     # Jump to unread message when uncollapse
unset wait_key          # Ask to press a key after shell-escape, pipes, etc.
set mime_forward=ask-no # Prompt whether to forward email as a whole

# muttprint may need: perl -MCPAN -e 'install Text::Iconv'
set print_command="~/.mutt/scripts/muttprint -1 -C 'ps2pdf - - | open -a preview -f'"
set query_command="lbdbq %s 2> /dev/null"

#------------------------------------------------------------------------------
#                                   sorting
#------------------------------------------------------------------------------

set sort=threads
set sort_alias=alias
set sort_aux=reverse-last-date-received
set sort_browser=alpha
set sort_re=yes

#------------------------------------------------------------------------------
#                                   formats
#------------------------------------------------------------------------------

set alias_format="%4n %2f %t %-10a   %r"
set attach_format=" %u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "
set attribution="On %d, %n wrote:"
set compose_format="-- compose  [ approx. msg size: %l   attachments: %a ]%>-"
set date_format="!%a, %b %d, %Y at %I:%M:%S%p %Z"
set editor="vim +\`awk ' /^$/ {print i+2; exit} {i++}' %s\` +':set textwidth=72' %s"
set folder_format="%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"
set forward_format="Fwd: %s"
set indent_string="> "
set index_format="%4C %Z %{!%b %d} %?M?#%4M&%5c? %-25.25F %s%?Y? <%Y>?"
set mask="!^\\.[^.]"
set message_format="%s"
set pager_format="-%Z- %C/%m: %-20.20n   %s"
set quote_regexp="^([ \t]*[|>:}#])+"
set reply_regexp="^(re([\[0-9\]+])*|aw):[ \t]*"
set simple_search="~f %s | ~s %s"
set smileys="(>From )|(:[-^]?[][)(><}{|/DP])"
set status_chars="-*%A"
set status_format="%_h:  [%r]  %f [total:%?M?%M/?%m%?n? new:%n?%?o? old:%o?%?d? del:%d?%?F? flag:%F?%?t? tag:%t?%?p? post:%p?%?b? inc:%b?%?l? %l?]       (%s/%S)%> [%P]   "

#------------------------------------------------------------------------------
#                                     UI
#------------------------------------------------------------------------------

# show version at startup
push V

# Always collapse threads when entering a folder.
folder-hook '.' 'push <collapse-all>'

# Gmail-style threading: always save replies in current folder.
folder-hook '.' 'set record="^"'

unset help
#set display_filter=~/.mutt/scripts/message-format.pl
set pager_index_lines=8
set pager_stop          # don't move to next message at end w/ next-page
set narrow_tree
set wrapmargin=1        # [0] margin remaining at the right side of terminal
set to_chars=" +TCFL"

# Sidebar
set sidebar_divider_char=" "
set sidebar_folder_indent=yes
set sidebar_short_path=yes
set sidebar_visible=yes
set sidebar_width=28
set sidebar_format="%B%* %N"

ignore *
unignore From: Sender: Reply-To:
unignore To: Cc: Bcc:
unignore Subject:
unignore Date:
unignore User-Agent: X-Mailer:
unignore X-Label:

hdr_order From: Sender: Reply-To: \
    To: Cc: Bcc: \
    Subject: \
    Date: \
    User-Agent: X-Mailer: \
    X-Label:

# Solarized color scheme
# ----------------------
# base03  = color234
# base02  = color235
# base01  = color239
# base00  = color240
# base0   = color244
# base1   = color245
# base2   = color187
# base3   = color230
# yellow  = color136
# orange  = color166
# red     = color124
# magenta = color165
# violet  = color61
# blue    = color33
# cyan    = color37
# green   = color64

#
# Framing
#

color indicator  color234    color136 # selection bar
color status     color244    color235 # status bar at bottom
color message    color136    color234 # informational messages
color error      color124    color234 # error messages
color tree       color239    color234 # thread tree arrow
color tilde      color245    color234 # pager tilde
color search     color166    color234 # highlighted text in pager

# Sidebar
color sidebar_divider    color244    color235
color sidebar_indicator  color244    color235
color sidebar_highlight  color234    color136
color sidebar_new        color33     color234
#color sidebar_ordinary   color244    color234
color sidebar_flagged    color124    color234
color sidebar_spoolfile  color37     color234

# Slight deviations from solarized color scheme.
color index      color244   color234  ~A # all = default
color index      color244   color234  ~R # read messages
color index      color244   color234  ~l # mailing lists
color index      color107   color234  ~P # mail from myself
color index      color136   color234  ~p # mail to myself
color index      color166   color234  ~k # PGP key material included
color index      color79    color234  ~g # PGP signed
color index      color76    color234  ~G # PGP encrypted
color index      color35    color234  ~V # cryptographically verified
color index      color33    color234  ~N # new
color index      color33    color234  ~O # old
color index      color64    color234  ~Q # replied mails
color index      color37    color234  "~v~(!~N)~(!~F)" # collapsed thread (w/o flagged)
color index      color124   color234  "~v~(!~N)~(~F)"  # collapsed thread (w/ flagged)
color index      color89    color234  ~D # deleted
color index      color92    color234  ~= # duplicates
color index      color124   color234  ~F # flagged
color index      color166   color187  ~T # tagged

#
# Headers
#

color hdrdefault color239   color234
color header     color136   color234  "(From|Sender|Reply-To):"
color header     color64    color234  "^(To|Cc|Bcc):"
color header     color166   color234  "Subject:"

#
# Body
#

color markers    color239    color234 # '+' markers at wrapped lines
color attachment color239    color234
color signature  color239    color234
color normal     color244    color234
color bold       color245    color234
color underline  color245    color234

color quoted     color37     color234
color quoted1    color33     color234
color quoted2    color136    color234
color quoted3    color124    color234
color quoted4    color166    color234

# Protocols
color body  color61  color234 "(finger|ftp|http|https|telnet)://[^ >]+"
color body  color61  color234 "news:[^ \">\t\r\n]*"
# *Bold* text
color body  color245 color234 "(^|[[:space:]])\\*[^[:space:]]+\\*([[:space:]]|$)"
# _Underlined_ text
color body  color245 color234 "(^|[[:space:]])_[^[:space:]]+_([[:space:]]|$)"
# /Italic/ text
color body  color245 color234 "(^|[[:space:]])/[^[:space:]]+/([[:space:]]|$)"
# Smileys
color body  color136 color234 ' [;:=][-^]?[pxo)]'
 # Emails
color body	color61  color234 '[-.+_a-z0-9]+@[-.a-z0-9]+\.[a-z]+'
# Phone Numbers
color body  color61  color234 '(\+?[0-9]{1,2}[-.])?[0-9]{3}[-.][a-z0-9]{3}[-.][-0-9]+\\W+'
color body  color64  color234 '((\+|00)[0-9]{1,2}) ?(\(0\))?[0-9]{1,4}[\/ ][-0-9]+\\W+'
# IPs and subnets
color body  color64  color234 '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}(\/([1-9]|[12][0-9]|3[012])[^[:digit:]])?'
# Time
color body  color37  color234  '([0-9]{1,2}(:[0-9]{1,2})? ?- ?)?([0-9]{1,2}:)?[0-9]{1,2}(:[0-9]{1,2})? ?[ap]m\\W+'
# GPG / PGP
color body  color244 color234 "^gpg:.*"
color body  color136 color234 "^gpg: WARNING.*"
color body  color64  color234 "^gpg: Good signature from.*"
color body  color64  color234 "^Verification successful"
color body  color244 color160 "^gpg: Bad signature from.*"

#------------------------------------------------------------------------------
#                               crypto settings
#------------------------------------------------------------------------------

set crypt_replysign=no           # automatically sign replies to signed msgs
set crypt_replysignencrypted=yes # automatically sign replies to encrypted msgs
set pgp_timeout=0
set pgp_use_gpg_agent=yes

# [pgp_entry_format] PGP key selection menu
# %n    number
# %k    key id
# %u    user id
# %a    algorithm
# %l    key length
# %f    flags
# %c    capabilities
# %t    trust/validity of the key-uid association
# %[<s>]    date of the key where <s> is an strftime(3) expression
set pgp_entry_format="%4n %t%f %4l/0x%k %-4a %2c %u"

set pgp_good_sign="^gpg: Good signature from"

# %p      Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
#         string otherwise. Note: This may be used with a %? construct.
# %f      Expands to the name of a file containing a message.
# %s      Expands to the name of a file containing the signature part
#                    of a multipart/signed attachment when verifying it.
# %a      The value of $pgp_sign_as.
# %r      One or more key IDs.

#set pgp_getkeys_command
set pgp_getkeys_command="gpg --recv-keys %r 2> /dev/null"

# decode application/pgp
set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="gpg --no-verbose --batch --output - %f"

# create a application/pgp signed (old-style) message
set pgp_clearsign_command="gpg --no-verbose --batch --output - --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime signed attachment
set pgp_sign_command="gpg --no-verbose --batch --output - --armor --detach-sign --textmode %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
set pgp_encrypt_only_command="pgpewrap gpg -v --batch --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
set pgp_encrypt_sign_command="pgpewrap gpg -v --batch --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set pgp_import_command="gpg --no-verbose --import -v %f"

# export a key from the public key ring
set pgp_export_command="gpg --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r"=20

# read in the secret key ring
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r"=20

#------------------------------------------------------------------------------
#                                  remainder
#------------------------------------------------------------------------------

source ~/.mutt/autoview
source ~/.mutt/keys

# Aliases
set alias_file = `FILE=$HOME/.mutt/aliases; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`
source $alias_file

# Hooks
source `FILE=$HOME/.mutt/hooks; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`

# Lists
source `FILE=$HOME/.mutt/lists; if [ ! -f $FILE ]; then FILE=/dev/null;fi;echo "$FILE"`

# Patch-specific configuration
source `FILE=$HOME/.mutt/xlabel;  if [ ! $(mutt -v | grep xlabel) ]; then FILE=/dev/null;fi;echo "$FILE"`

# vim: ft=muttrc
