[general]
ui = TTYUI
metadata = ~/.offlineimap
pythonfile = ~/.offlineimap.py
accounts = Google
maxsyncaccounts = 2
fsync = false

[Account Google]
localrepository = Local
remoterepository = Gmail
synclabels = yes
labelsheader = X-Label
ignorelabels = \Inbox, \Starred, \Sent, \Draft, \Spam, \Trash, \Important
autorefresh = 2
quick = 10
# https://gist.github.com/mavam/298d8d181e4c0b33b7a4
postsynchook = maildir-notifier ~/.mail/INBOX

[Repository Local]
type = GmailMaildir
localfolders = ~/.mail
sep = /
foldersort = folder_cmp(folder_mapping.values())
nametrans = lambda x: {v: k for k, v in folder_mapping.items()}.get(x, x)

[Repository Gmail]
type = Gmail
sslcacertfile = /usr/local/etc/openssl/cert.pem
maxconnections = 1
realdelete = no
remoteuser = matthias@vallentin.net
remotepasseval = get_keychain_pass('offlineimap')
foldersort = folder_cmp(folder_mapping.keys())
folderfilter = lambda x: x not in ['[Gmail]/Important']
nametrans = lambda x: folder_mapping.get(x, x)

# Generate a file listing all mailboxes for mutt. 
[mbnames]
enabled = yes
filename = ~/.mutt/mailboxes
# Enumerating all Gmail mailboxes at the top is a lazy way to adjust the
# mailbox order. The right way would be to use the option *sort_keyfunc* and
# pass it Python lambda that does the sorting.
#sort_keyfunc = lambda d: (d['accountname'], d['foldername'])
header = "mailboxes +INBOX +gmail/sent +gmail/flagged +gmail/drafts +gmail/archive +gmail/trash +gmail/spam\nmailboxes "
peritem = "+%(foldername)s"
sep = "\nmailboxes "
footer = "\n"

# vim: ft=cfg tw=0
