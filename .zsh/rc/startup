##
## Startup
##

# Notify if there is a detached screen.
if which screen &> /dev/null ; then
	#screen_pids=($(screen -ls | awk -F. '/[ \t]+[0-9]+/ {print $1}'))
	screen_pids=(${${(M)${(f)"$(screen -ls)"}:#(#s)[[:space:]]##([0-9]##).*}/(#b)[[:space:]]#([0-9]##).*/$match[1]})
	if (( ${#screen_pids} )) ; then
		printf "%d screen(s) running: [%s]\n" $#screen_pids "${screen_pids}"
	fi
fi

# Setup SSH and GPG agents. 
function setup_agents
{
    local -a kargs; kargs=(--eval --host fix)
    local gpg_keys=${${${(M)${(f)"$(gpg --list-secret-keys \
        --list-options no-show-photos 2>/dev/null)"}:%sec*}#sec */}%% *}

    if which keychain &> /dev/null
    then
        case $1 in
            "ssh") eval $(keychain $kargs --agents ssh ~/.ssh/**/*pub(:r));;
            "gpg") eval $(keychain $kargs --agents gpg $gpg_keys);;
            *)     eval $(keychain $kargs ~/.ssh/**/*pub(:r) $gpg_keys);;
        esac
    fi
}

# Automatically start agents if they are already running.
if [[ ${#$(findpids gpg-agent)} > 0 && ${#$(findpids ssh-agent)} > 0 ]]
then
    setup_agents
elif [[ ${#$(findpids ssh-agent)} > 0 ]]
then
    setup_agents "ssh"
elif [[ ${#$(findpids gpg-agent)} > 0 ]]
then
    setup_agents "gpg"
fi

# vim: ft=zsh
